1. 전체 코드

<?php
  include "../../config.php";
  if($_GET['view-source'] == 1){ view_source(); }
  if(!$_COOKIE['user_lv']){
    SetCookie("user_lv","1",time()+86400*30,"/challenge/web-01/");
    echo("<meta http-equiv=refresh content=0>");
  }
?>
<html>
<head>
<title>Challenge 1</title>
</head>
<body bgcolor=black>
<center>
<br><br><br><br><br>
<font color=white>
---------------------<br>
<?php
  if(!is_numeric($_COOKIE['user_lv'])) $_COOKIE['user_lv']=1;
  if($_COOKIE['user_lv']>=6) $_COOKIE['user_lv']=1;
  if($_COOKIE['user_lv']>5) solve(1);
  echo "<br>level : {$_COOKIE['user_lv']}";
?>
<br>
<a href=./?view-source=1>view-source</a>
</body>
</html>

2. 코드 분석

1) 첫 번째 php 구문
<?php
  include "../../config.php";                               //solve(1)을 실행시키기 위해 부르는 듯
  if($_GET['view-source'] == 1){ view_source(); }     //페이지보기 코드
  if(!$_COOKIE['user_lv']){ //쿠키가 없으면
    SetCookie("user_lv","1",time()+86400*30,"/challenge/web-01/"); //쿠키를 만든다
    echo("<meta http-equiv=refresh content=0>");
  }
?>

즉, 첫 번째 php 구문은 본 웹해킹 환경 조성에 필요한 쿠키를 만드는 과정이다.

2) 두 번째 php 구문

<?php
  if(!is_numeric($_COOKIE['user_lv'])) $_COOKIE['user_lv']=1; //쿠키값이 숫자가 아니면 1로 초기화
  if($_COOKIE['user_lv']>=6) $_COOKIE['user_lv']=1;           // 유저 레벨이 6보다 높으면 1로 초기화
  if($_COOKIE['user_lv']>5) solve(1);                              // 유저레벨이 5보다 크면 solve(1)실행
  echo "<br>level : {$_COOKIE['user_lv']}"                      // 유저의 레벨을 보여준다
?>

즉, 유저의 레벨이 설정되어있지 않거나 6보다 큰 경우, 그냥 넘어가고, 5보다 큰 경우, solve(1)이 실행되며 이 웹페이지를 해결하게 된다.

3 . 해결과정
1) 여기서 쿠키의 값을 변조하기 위해 editthiscookie를 이용하게 된다. editthiscookie를 이용하게 되면, user_lv라는 쿠키가 보이게 되고, 이 값을 알맞게 수정해주면 될 것이다.

2) php의 구문을 보면, 이 쿠키의 값이 6보다 크면 초기화되고, 5 이상일 때 해결될 것을 알 수 있다. 이에 따라, 두 조건을 만족하는 적절한 값 중 하나인 5.5를 넣어보게 되면, 이 웹페이지는 해결된다.
